HashSet -
* Underlying dataStructure is hashMap.
* As internally it is making use of HashMap and what ever we are storing
the element it get added as a key and we know in hashMap key should not be duplicate.


TreeSEt-
floor,first,higher,last,subset

element get stored in default order, and it does not add the duplicate element

Comparable - for only one creteria only

Map-
It is an interface so we cannot create the object for that

HashMap -
* hashing =mapping the key to the values 
* the underlying data structure is linkedList
* default capacity is 16 for hashMap

* Calculate the index 
 index = hashcode(key)&(n-1)
where n = number of bucket or size of array
      n = 16 (default)
then it computes with linkedlist as a node and if it contain 2 same index then it 
create the another node.

map.put(null,null)
* hashCode of null is 0

* equals and the hashCode is having some contracts
1) Whenever it is invoked on the same object more than once during an execution of a Java application, 
the hashCode method must consistently return the same integer, provided no information used in equals 
comparisons on the object is modified. This integer need not remain consistent from one execution of 
an application to another execution of the same application.
2) If two objects are equal according to the equals(Object) method, then calling the hashCode method 
on each of the two objects must produce the same integer result.
3) It is not required that if two objects are unequal according to the equals(java.lang.Object) method,
 then calling the hashCode method on each of the two objects must produce distinct integer results. However, 
the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. 


* modCount flag = it is an integer value which is updated each tym when collection modification is done.
* FailSafeIterator allow modification of collection while iterating over it.
Ex concurrentHashMap,copyWriteArrayList - in this we are working on clone of the list and we can edit or add there also.


////////////////////////////////////////////////////
                   MULTITHREADING
